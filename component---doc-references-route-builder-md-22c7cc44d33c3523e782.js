(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{"2lfK":function(e,t,r){"use strict";r.r(t),r.d(t,"_frontmatter",(function(){return o})),r.d(t,"default",(function(){return c}));r("5hJT"),r("W1QL"),r("K/PF"),r("t91x"),r("75LO"),r("PJhk"),r("mXGw");var n=r("/FXl"),a=r("TjRS");r("aD51");function i(){return(i=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e}).apply(this,arguments)}var o={};void 0!==o&&o&&o===Object(o)&&Object.isExtensible(o)&&!o.hasOwnProperty("__filemeta")&&Object.defineProperty(o,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"doc/references/route-builder.md"}});var b={_frontmatter:o},l=a.a;function c(e){var t=e.components,r=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,["components"]);return Object(n.b)(l,i({},b,r,{components:t,mdxType:"MDXLayout"}),Object(n.b)("h1",{id:"route-builder"},"Route Builder"),Object(n.b)("h2",{id:"overview"},"Overview"),Object(n.b)("p",null,"Route builder (",Object(n.b)("inlineCode",{parentName:"p"},"RouteBuilder"),") is the way to create combinations of parallel routes and generate refs and hrefs in Boring Router."),Object(n.b)("blockquote",null,Object(n.b)("p",{parentName:"blockquote"},'Learn more about "ref" and "href" in Boring Router ',Object(n.b)("a",i({parentName:"p"},{href:"/boring-router/references/ref-href"}),"here"),".")),Object(n.b)("p",null,"We can get a route builder from different objects with different preset context:"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"router.$(...)")," create a route builder with:",Object(n.b)("ol",{parentName:"li"},Object(n.b)("li",{parentName:"ol"},"router context and current states."),Object(n.b)("li",{parentName:"ol"},"a given building part."))),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"router.$scratch()")," create a route builder with router context without current states."),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"route.$(...)")," create a route builder with:",Object(n.b)("ol",{parentName:"li"},Object(n.b)("li",{parentName:"ol"},"router context and current states."),Object(n.b)("li",{parentName:"ol"},Object(n.b)("inlineCode",{parentName:"li"},"route")," and the parameter as a given building part.")))),Object(n.b)("p",null,"We can concatenate multiple building part with ",Object(n.b)("inlineCode",{parentName:"p"},"$()")," method under ",Object(n.b)("inlineCode",{parentName:"p"},"RouteBuilder"),", e.g.:"),Object(n.b)("pre",null,Object(n.b)("code",i({parentName:"pre"},{className:"language-ts"}),"router\n  .$(route, {mode: 'default'})\n  .$(overlayRoute.task.taskId, {taskId: '123'})\n  .$push();\n")),Object(n.b)("p",null,"Similar to ",Object(n.b)("inlineCode",{parentName:"p"},"RouteMatch"),", ",Object(n.b)("inlineCode",{parentName:"p"},"RouteBuilder")," also has methods including ",Object(n.b)("inlineCode",{parentName:"p"},"$ref()"),", ",Object(n.b)("inlineCode",{parentName:"p"},"$href()"),", ",Object(n.b)("inlineCode",{parentName:"p"},"$push()")," and ",Object(n.b)("inlineCode",{parentName:"p"},"$replace()"),"."))}void 0!==c&&c&&c===Object(c)&&Object.isExtensible(c)&&!c.hasOwnProperty("__filemeta")&&Object.defineProperty(c,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"doc/references/route-builder.md"}}),c.isMDXComponent=!0}}]);
//# sourceMappingURL=component---doc-references-route-builder-md-22c7cc44d33c3523e782.js.map